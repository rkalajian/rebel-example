{"remainingRequest":"/code/rebel-example/site/web/wp/wp-content/themes/rebel-example/node_modules/buble-loader/index.js??ref--2-1!/code/rebel-example/site/web/wp/wp-content/themes/rebel-example/node_modules/foundation-sites/js/foundation.util.keyboard.js","dependencies":[{"path":"/code/rebel-example/site/web/wp/wp-content/themes/rebel-example/node_modules/foundation-sites/js/foundation.util.keyboard.js","mtime":1501692560000},{"path":"/code/rebel-example/site/web/wp/wp-content/themes/rebel-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/code/rebel-example/site/web/wp/wp-content/themes/rebel-example/node_modules/buble-loader/index.js","mtime":1487914911000}],"contextDependencies":[],"result":["/*******************************************\n *                                         *\n * This util was created by Marius Olbertz *\n * Please thank Marius on GitHub /owlbertz *\n * or the web http://www.mariusolbertz.de/ *\n *                                         *\n ******************************************/\n\n'use strict';\n\nimport $ from 'jquery';\nimport { rtl as Rtl } from './foundation.util.core';\n\nvar keyCodes = {\n  9: 'TAB',\n  13: 'ENTER',\n  27: 'ESCAPE',\n  32: 'SPACE',\n  35: 'END',\n  36: 'HOME',\n  37: 'ARROW_LEFT',\n  38: 'ARROW_UP',\n  39: 'ARROW_RIGHT',\n  40: 'ARROW_DOWN'\n}\n\nvar commands = {}\n\n// Functions pulled out to be referenceable from internals\nfunction findFocusable($element) {\n  if(!$element) {return false; }\n  return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function() {\n    if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) { return false; } //only have visible elements and those that have a tabindex greater or equal 0\n    return true;\n  });\n}\n\nfunction parseKey(event) {\n  var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\n\n  // Remove un-printable characters, e.g. for `fromCharCode` calls for CTRL only events\n  key = key.replace(/\\W+/, '');\n\n  if (event.shiftKey) { key = \"SHIFT_\" + key; }\n  if (event.ctrlKey) { key = \"CTRL_\" + key; }\n  if (event.altKey) { key = \"ALT_\" + key; }\n\n  // Remove trailing underscore, in case only modifiers were used (e.g. only `CTRL_ALT`)\n  key = key.replace(/_$/, '');\n\n  return key;\n}\n\nvar Keyboard = {\n  keys: getKeyCodes(keyCodes),\n\n  /**\n   * Parses the (keyboard) event and returns a String that represents its key\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n   * @param {Event} event - the event generated by the event handler\n   * @return String key - String that represents the key pressed\n   */\n  parseKey: parseKey,\n\n  /**\n   * Handles the given (keyboard) event\n   * @param {Event} event - the event generated by the event handler\n   * @param {String} component - Foundation component's name, e.g. Slider or Reveal\n   * @param {Objects} functions - collection of functions that are to be executed\n   */\n  handleKey: function handleKey(event, component, functions) {\n    var commandList = commands[component],\n      keyCode = this.parseKey(event),\n      cmds,\n      command,\n      fn;\n\n    if (!commandList) { return console.warn('Component not defined!'); }\n\n    if (typeof commandList.ltr === 'undefined') { // this component does not differentiate between ltr and rtl\n        cmds = commandList; // use plain list\n    } else { // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\n        if (Rtl()) { cmds = $.extend({}, commandList.ltr, commandList.rtl); }\n\n        else { cmds = $.extend({}, commandList.rtl, commandList.ltr); }\n    }\n    command = cmds[keyCode];\n\n    fn = functions[command];\n    if (fn && typeof fn === 'function') { // execute function  if exists\n      var returnValue = fn.apply();\n      if (functions.handled || typeof functions.handled === 'function') { // execute function when event was handled\n          functions.handled(returnValue);\n      }\n    } else {\n      if (functions.unhandled || typeof functions.unhandled === 'function') { // execute function when event was not handled\n          functions.unhandled();\n      }\n    }\n  },\n\n  /**\n   * Finds all focusable elements within the given `$element`\n   * @param {jQuery} $element - jQuery object to search within\n   * @return {jQuery} $focusable - all focusable elements within `$element`\n   */\n\n  findFocusable: findFocusable,\n\n  /**\n   * Returns the component name name\n   * @param {Object} component - Foundation component, e.g. Slider or Reveal\n   * @return String componentName\n   */\n\n  register: function register(componentName, cmds) {\n    commands[componentName] = cmds;\n  },\n\n\n  // TODO9438: These references to Keyboard need to not require global. Will 'this' work in this context?\n  //\n  /**\n   * Traps the focus in the given element.\n   * @param  {jQuery} $element  jQuery object to trap the foucs into.\n   */\n  trapFocus: function trapFocus($element) {\n    var $focusable = findFocusable($element),\n        $firstFocusable = $focusable.eq(0),\n        $lastFocusable = $focusable.eq(-1);\n\n    $element.on('keydown.zf.trapfocus', function(event) {\n      if (event.target === $lastFocusable[0] && parseKey(event) === 'TAB') {\n        event.preventDefault();\n        $firstFocusable.focus();\n      }\n      else if (event.target === $firstFocusable[0] && parseKey(event) === 'SHIFT_TAB') {\n        event.preventDefault();\n        $lastFocusable.focus();\n      }\n    });\n  },\n  /**\n   * Releases the trapped focus from the given element.\n   * @param  {jQuery} $element  jQuery object to release the focus for.\n   */\n  releaseFocus: function releaseFocus($element) {\n    $element.off('keydown.zf.trapfocus');\n  }\n}\n\n/*\n * Constants for easier comparing.\n * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n */\nfunction getKeyCodes(kcs) {\n  var k = {};\n  for (var kc in kcs) { k[kcs[kc]] = kcs[kc]; }\n  return k;\n}\n\nexport {Keyboard};\n",{"version":3,"file":"/code/rebel-example/site/web/wp/wp-content/themes/rebel-example/node_modules/foundation-sites/js/foundation.util.keyboard.js","sources":["node_modules/foundation-sites/js/foundation.util.keyboard.js"],"sourcesContent":["/*******************************************\n *                                         *\n * This util was created by Marius Olbertz *\n * Please thank Marius on GitHub /owlbertz *\n * or the web http://www.mariusolbertz.de/ *\n *                                         *\n ******************************************/\n\n'use strict';\n\nimport $ from 'jquery';\nimport { rtl as Rtl } from './foundation.util.core';\n\nconst keyCodes = {\n  9: 'TAB',\n  13: 'ENTER',\n  27: 'ESCAPE',\n  32: 'SPACE',\n  35: 'END',\n  36: 'HOME',\n  37: 'ARROW_LEFT',\n  38: 'ARROW_UP',\n  39: 'ARROW_RIGHT',\n  40: 'ARROW_DOWN'\n}\n\nvar commands = {}\n\n// Functions pulled out to be referenceable from internals\nfunction findFocusable($element) {\n  if(!$element) {return false; }\n  return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function() {\n    if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) { return false; } //only have visible elements and those that have a tabindex greater or equal 0\n    return true;\n  });\n}\n\nfunction parseKey(event) {\n  var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\n\n  // Remove un-printable characters, e.g. for `fromCharCode` calls for CTRL only events\n  key = key.replace(/\\W+/, '');\n\n  if (event.shiftKey) key = `SHIFT_${key}`;\n  if (event.ctrlKey) key = `CTRL_${key}`;\n  if (event.altKey) key = `ALT_${key}`;\n\n  // Remove trailing underscore, in case only modifiers were used (e.g. only `CTRL_ALT`)\n  key = key.replace(/_$/, '');\n\n  return key;\n}\n\nvar Keyboard = {\n  keys: getKeyCodes(keyCodes),\n\n  /**\n   * Parses the (keyboard) event and returns a String that represents its key\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n   * @param {Event} event - the event generated by the event handler\n   * @return String key - String that represents the key pressed\n   */\n  parseKey: parseKey,\n\n  /**\n   * Handles the given (keyboard) event\n   * @param {Event} event - the event generated by the event handler\n   * @param {String} component - Foundation component's name, e.g. Slider or Reveal\n   * @param {Objects} functions - collection of functions that are to be executed\n   */\n  handleKey(event, component, functions) {\n    var commandList = commands[component],\n      keyCode = this.parseKey(event),\n      cmds,\n      command,\n      fn;\n\n    if (!commandList) return console.warn('Component not defined!');\n\n    if (typeof commandList.ltr === 'undefined') { // this component does not differentiate between ltr and rtl\n        cmds = commandList; // use plain list\n    } else { // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\n        if (Rtl()) cmds = $.extend({}, commandList.ltr, commandList.rtl);\n\n        else cmds = $.extend({}, commandList.rtl, commandList.ltr);\n    }\n    command = cmds[keyCode];\n\n    fn = functions[command];\n    if (fn && typeof fn === 'function') { // execute function  if exists\n      var returnValue = fn.apply();\n      if (functions.handled || typeof functions.handled === 'function') { // execute function when event was handled\n          functions.handled(returnValue);\n      }\n    } else {\n      if (functions.unhandled || typeof functions.unhandled === 'function') { // execute function when event was not handled\n          functions.unhandled();\n      }\n    }\n  },\n\n  /**\n   * Finds all focusable elements within the given `$element`\n   * @param {jQuery} $element - jQuery object to search within\n   * @return {jQuery} $focusable - all focusable elements within `$element`\n   */\n\n  findFocusable: findFocusable,\n\n  /**\n   * Returns the component name name\n   * @param {Object} component - Foundation component, e.g. Slider or Reveal\n   * @return String componentName\n   */\n\n  register(componentName, cmds) {\n    commands[componentName] = cmds;\n  },\n\n\n  // TODO9438: These references to Keyboard need to not require global. Will 'this' work in this context?\n  //\n  /**\n   * Traps the focus in the given element.\n   * @param  {jQuery} $element  jQuery object to trap the foucs into.\n   */\n  trapFocus($element) {\n    var $focusable = findFocusable($element),\n        $firstFocusable = $focusable.eq(0),\n        $lastFocusable = $focusable.eq(-1);\n\n    $element.on('keydown.zf.trapfocus', function(event) {\n      if (event.target === $lastFocusable[0] && parseKey(event) === 'TAB') {\n        event.preventDefault();\n        $firstFocusable.focus();\n      }\n      else if (event.target === $firstFocusable[0] && parseKey(event) === 'SHIFT_TAB') {\n        event.preventDefault();\n        $lastFocusable.focus();\n      }\n    });\n  },\n  /**\n   * Releases the trapped focus from the given element.\n   * @param  {jQuery} $element  jQuery object to release the focus for.\n   */\n  releaseFocus($element) {\n    $element.off('keydown.zf.trapfocus');\n  }\n}\n\n/*\n * Constants for easier comparing.\n * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n */\nfunction getKeyCodes(kcs) {\n  var k = {};\n  for (var kc in kcs) k[kcs[kc]] = kcs[kc];\n  return k;\n}\n\nexport {Keyboard};\n"],"names":["const"],"mappings":"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","sourceRoot":"/code/rebel-example/site/web/wp/wp-content/themes/rebel-example"}]}