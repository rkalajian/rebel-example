{"remainingRequest":"/code/rebel-example/site/web/wp/wp-content/themes/rebel-example/node_modules/buble-loader/index.js??ref--2-1!/code/rebel-example/site/web/wp/wp-content/themes/rebel-example/node_modules/foundation-sites/js/foundation.toggler.js","dependencies":[{"path":"/code/rebel-example/site/web/wp/wp-content/themes/rebel-example/node_modules/foundation-sites/js/foundation.toggler.js","mtime":1501708560000},{"path":"/code/rebel-example/site/web/wp/wp-content/themes/rebel-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/code/rebel-example/site/web/wp/wp-content/themes/rebel-example/node_modules/buble-loader/index.js","mtime":1487914911000}],"contextDependencies":[],"result":["'use strict';\n\nimport $ from 'jquery';\nimport { Motion } from './foundation.util.motion';\nimport { Plugin } from './foundation.plugin';\nimport { Triggers } from './foundation.util.triggers';\n\n/**\n * Toggler module.\n * @module foundation.toggler\n * @requires foundation.util.motion\n * @requires foundation.util.triggers\n */\n\nvar Toggler = (function (Plugin) {\n  function Toggler () {\n    Plugin.apply(this, arguments);\n  }\n\n  if ( Plugin ) Toggler.__proto__ = Plugin;\n  Toggler.prototype = Object.create( Plugin && Plugin.prototype );\n  Toggler.prototype.constructor = Toggler;\n\n  Toggler.prototype._setup = function _setup (element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Toggler.defaults, element.data(), options);\n    this.className = '';\n    this.className = 'Toggler'; // ie9 back compat\n\n    // Triggers init is idempotent, just need to make sure it is initialized\n    Triggers.init($);\n\n    this._init();\n    this._events();\n  };\n\n  /**\n   * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\n   * @function\n   * @private\n   */\n  Toggler.prototype._init = function _init () {\n    var input;\n    // Parse animation classes if they were set\n    if (this.options.animate) {\n      input = this.options.animate.split(' ');\n\n      this.animationIn = input[0];\n      this.animationOut = input[1] || null;\n    }\n    // Otherwise, parse toggle class\n    else {\n      input = this.$element.data('toggler');\n      // Allow for a . at the beginning of the string\n      this.className = input[0] === '.' ? input.slice(1) : input;\n    }\n\n    // Add ARIA attributes to triggers\n    var id = this.$element[0].id;\n    $((\"[data-open=\\\"\" + id + \"\\\"], [data-close=\\\"\" + id + \"\\\"], [data-toggle=\\\"\" + id + \"\\\"]\"))\n      .attr('aria-controls', id);\n    // If the target is hidden, add aria-hidden\n    this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\n  };\n\n  /**\n   * Initializes events for the toggle trigger.\n   * @function\n   * @private\n   */\n  Toggler.prototype._events = function _events () {\n    this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\n  };\n\n  /**\n   * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\n   * @function\n   * @fires Toggler#on\n   * @fires Toggler#off\n   */\n  Toggler.prototype.toggle = function toggle () {\n    this[ this.options.animate ? '_toggleAnimate' : '_toggleClass']();\n  };\n\n  Toggler.prototype._toggleClass = function _toggleClass () {\n    this.$element.toggleClass(this.className);\n\n    var isOn = this.$element.hasClass(this.className);\n    if (isOn) {\n      /**\n       * Fires if the target element has the class after a toggle.\n       * @event Toggler#on\n       */\n      this.$element.trigger('on.zf.toggler');\n    }\n    else {\n      /**\n       * Fires if the target element does not have the class after a toggle.\n       * @event Toggler#off\n       */\n      this.$element.trigger('off.zf.toggler');\n    }\n\n    this._updateARIA(isOn);\n    this.$element.find('[data-mutate]').trigger('mutateme.zf.trigger');\n  };\n\n  Toggler.prototype._toggleAnimate = function _toggleAnimate () {\n    var _this = this;\n\n    if (this.$element.is(':hidden')) {\n      Motion.animateIn(this.$element, this.animationIn, function() {\n        _this._updateARIA(true);\n        this.trigger('on.zf.toggler');\n        this.find('[data-mutate]').trigger('mutateme.zf.trigger');\n      });\n    }\n    else {\n      Motion.animateOut(this.$element, this.animationOut, function() {\n        _this._updateARIA(false);\n        this.trigger('off.zf.toggler');\n        this.find('[data-mutate]').trigger('mutateme.zf.trigger');\n      });\n    }\n  };\n\n  Toggler.prototype._updateARIA = function _updateARIA (isOn) {\n    this.$element.attr('aria-expanded', isOn ? true : false);\n  };\n\n  /**\n   * Destroys the instance of Toggler on the element.\n   * @function\n   */\n  Toggler.prototype._destroy = function _destroy () {\n    this.$element.off('.zf.toggler');\n  };\n\n  return Toggler;\n}(Plugin));\n\nToggler.defaults = {\n  /**\n   * Tells the plugin if the element should animated when toggled.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  animate: false\n};\n\nexport {Toggler};\n",{"version":3,"file":"/code/rebel-example/site/web/wp/wp-content/themes/rebel-example/node_modules/foundation-sites/js/foundation.toggler.js","sources":["node_modules/foundation-sites/js/foundation.toggler.js"],"sourcesContent":["'use strict';\n\nimport $ from 'jquery';\nimport { Motion } from './foundation.util.motion';\nimport { Plugin } from './foundation.plugin';\nimport { Triggers } from './foundation.util.triggers';\n\n/**\n * Toggler module.\n * @module foundation.toggler\n * @requires foundation.util.motion\n * @requires foundation.util.triggers\n */\n\nclass Toggler extends Plugin {\n  /**\n   * Creates a new instance of Toggler.\n   * @class\n   * @name Toggler\n   * @fires Toggler#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  _setup(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Toggler.defaults, element.data(), options);\n    this.className = '';\n    this.className = 'Toggler'; // ie9 back compat\n\n    // Triggers init is idempotent, just need to make sure it is initialized\n    Triggers.init($);\n\n    this._init();\n    this._events();\n  }\n\n  /**\n   * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\n   * @function\n   * @private\n   */\n  _init() {\n    var input;\n    // Parse animation classes if they were set\n    if (this.options.animate) {\n      input = this.options.animate.split(' ');\n\n      this.animationIn = input[0];\n      this.animationOut = input[1] || null;\n    }\n    // Otherwise, parse toggle class\n    else {\n      input = this.$element.data('toggler');\n      // Allow for a . at the beginning of the string\n      this.className = input[0] === '.' ? input.slice(1) : input;\n    }\n\n    // Add ARIA attributes to triggers\n    var id = this.$element[0].id;\n    $(`[data-open=\"${id}\"], [data-close=\"${id}\"], [data-toggle=\"${id}\"]`)\n      .attr('aria-controls', id);\n    // If the target is hidden, add aria-hidden\n    this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\n  }\n\n  /**\n   * Initializes events for the toggle trigger.\n   * @function\n   * @private\n   */\n  _events() {\n    this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\n  }\n\n  /**\n   * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\n   * @function\n   * @fires Toggler#on\n   * @fires Toggler#off\n   */\n  toggle() {\n    this[ this.options.animate ? '_toggleAnimate' : '_toggleClass']();\n  }\n\n  _toggleClass() {\n    this.$element.toggleClass(this.className);\n\n    var isOn = this.$element.hasClass(this.className);\n    if (isOn) {\n      /**\n       * Fires if the target element has the class after a toggle.\n       * @event Toggler#on\n       */\n      this.$element.trigger('on.zf.toggler');\n    }\n    else {\n      /**\n       * Fires if the target element does not have the class after a toggle.\n       * @event Toggler#off\n       */\n      this.$element.trigger('off.zf.toggler');\n    }\n\n    this._updateARIA(isOn);\n    this.$element.find('[data-mutate]').trigger('mutateme.zf.trigger');\n  }\n\n  _toggleAnimate() {\n    var _this = this;\n\n    if (this.$element.is(':hidden')) {\n      Motion.animateIn(this.$element, this.animationIn, function() {\n        _this._updateARIA(true);\n        this.trigger('on.zf.toggler');\n        this.find('[data-mutate]').trigger('mutateme.zf.trigger');\n      });\n    }\n    else {\n      Motion.animateOut(this.$element, this.animationOut, function() {\n        _this._updateARIA(false);\n        this.trigger('off.zf.toggler');\n        this.find('[data-mutate]').trigger('mutateme.zf.trigger');\n      });\n    }\n  }\n\n  _updateARIA(isOn) {\n    this.$element.attr('aria-expanded', isOn ? true : false);\n  }\n\n  /**\n   * Destroys the instance of Toggler on the element.\n   * @function\n   */\n  _destroy() {\n    this.$element.off('.zf.toggler');\n  }\n}\n\nToggler.defaults = {\n  /**\n   * Tells the plugin if the element should animated when toggled.\n   * @option\n   * @type {boolean}\n   * @default false\n   */\n  animate: false\n};\n\nexport {Toggler};\n"],"names":[],"mappings":"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","sourceRoot":"/code/rebel-example/site/web/wp/wp-content/themes/rebel-example"}]}